;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; TWAIN Direct Certification v1.0 13-Jul-2017
; arg:1 - scanner to test
; returns: pass or fail
;
; This runs all of the tests needed to pass certification for TWAIN Direct.
;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Run all of our tests, start by assuming success...
;
echo 'TWAIN Direct Certification v1.0 13-Jul-2017'
echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
log info '#TWAIN Direct Certification v1.0 13-Jul-2017'
log info '#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
echo
set certifyresult pass
call CERTIFY 'JSON Syntax' '${arg:1}'
call CERTIFY 'Configure Task Topology' '${arg:1}'
call CERTIFY 'Exception Handling' '${arg:1}'
call CERTIFY 'Vendor Handling' '${arg:1}'
call CERTIFY 'Check Values' '${arg:1}'
call CERTIFY 'Info Infoex' '${arg:1}'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; How did we do?
;
if '${get:certifyresult}' != 'pass' goto MAIN.ERROR
echo
echo '*********************************************'
echo 'The scanner passed TWAIN Direct Certification'
echo '*********************************************'
log info '#'
log info '#*********************************************'
log info '#The scanner passed TWAIN Direct Certification'
log info '#*********************************************'
return 'pass'
;
:MAIN.ERROR
echo
echo '***************************************************'
echo 'The scanner did not pass TWAIN Direct Certification'
echo '***************************************************'
log info '#'
log info '#***************************************************'
log info '#The scanner did not pass TWAIN Direct Certification'
log info '#***************************************************'
return 'fail'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Function: Certify
; arg:1 - script to run
; arg:2 - scanner to test
; returns: pass or fail
;
:CERTIFY
;
run '${arg:1}' '${arg:2}'
if '${ret:}' != 'pass' goto CERTIFY.ERROR
return 'pass'
:CERTIFY.ERROR
set certifyresult fail
return 'fail'
