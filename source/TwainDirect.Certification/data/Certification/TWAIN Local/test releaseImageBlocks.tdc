;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test releaseImageBlocks v1.0 24-Jun-2017
; arg:1 - first imageblock to remove, inclusive
; arg:2 - last imageblock to remvoe, inclusive
; arg:3 - [OUT] set tag to true, if done
; arg:4 - [OUT] set tag to first imaage block, if we have one
; returns: pass or fail
;
; Exercise the releaseImageBlocks command.  We're going to do the following:
;
; - confirm that releaseImageBlocks succeeds, and contains all required properties
;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Display the banner...
;
echo
echo 'Test releaseImageBlocks v1.0 24-Jun-2017'
set releaseimageblocksresult 'pass'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Call releaseImageBlocks, and check the return properties...
;
call RELEASEIMAGEBLOCKS '${arg:1}' '${arg:2}' '${arg:3}' '${arg:4}'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Bye-bye...
;
echopassfail 'SUMMARY' '${get:releaseimageblocksresult}'
return '${get:releaseimageblocksresult}'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; RELEASEIMAGEBLOCKS
; arg:1 - first imageblock to remove, inclusive
; arg:2 - last imageblock to remvoe, inclusive
; arg:3 - [OUT] set tag to true, if done
; arg:4 - [OUT] set tag to first imaage block, if we have one
; returns pass or fail
;
:RELEASEIMAGEBLOCKS
;
; Send the command...
releaseImageBlocks '${arg:1}' '${arg:2}'
;
; Check the mandatory properties...
call CHECK 'kind'
call CHECK 'commandId'
call CHECK 'method' '==' 'releaseImageBlocks'
call CHECK 'results'
call CHECK 'results.success' '==' 'true'
call CHECK 'results.session'
call CHECK 'results.session.sessionId' '!=' ''
call CHECK 'results.session.revision' '!=' ''
call CHECK 'results.session.state' '==' 'capturing'
if '${get:releaseimageblocksresult}' != 'pass' goto RELEASEIMAGEBLOCKS.FAIL
;
; We're good, check if we need to output values...
call RETURNVALUES '${arg:3}' '${arg:4}'
echopassfail 'releaseImageBlocks call' 'pass'
return 'pass'
;
; No joy...
:RELEASEIMAGEBLOCKS.FAIL
set releaseimageblocksresult 'fail'
echopassfail 'releaseImageBlocks call' 'fail'
return 'fail'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CHECK
; arg1 - property
; arg2 - if-statement operator (optional)
; arg3 - value to check for if arg2 is specified
; returns pass or fail
;
:CHECK
;
; Make sure the property exists...
if '${rjx:${arg:1}}' == '(null)' goto CHECK.MISSING
;
; If we have no operator, we're done...
if '${arg:2}' == '' goto CHECK.PASS
;
; Do the if-statement...
if '${rj:${arg:1}}' '${arg:2}' '${arg:3}' goto CHECK.PASS
;
; The if-statement failed...
echopassfail 'check ${arg:1}' 'fail (if '<${rj:${arg:1}}>' '${arg:2}' '<${arg:3}>')'
set releaseimageblocksresult 'fail'
return 'fail'
;
; The property is missing...
:CHECK.MISSING
echopassfail 'check ${arg:1}' 'fail (${arg1:} missing)'
set releaseimageblocksresult 'fail'
return 'fail'
;
; We're good...
:CHECK.PASS
echopassfail 'check ${arg:1}' 'pass'
return 'PASS'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; RETURNVALUES
; arg1 - [OUT] set tag to true, if done
; arg2 - [OUT] set tag to first imaage block, if we have one
; return pass
;
:RETURNVALUES
;
; If we don't have arg:1, we're done...
if '${arg:1}' == '') goto RETURNVALUES.DONE
;
; We're done if our state isn't capturing, or if the
; flag tells us we've drained the scanner...
set '${arg:1}' true
if '${rj:results.session.state}' != 'capturing' goto RETURNVALUES.DONE
if '${rj:results.session.imageBlocksDrained}' == 'true' goto RETURNVALUES.DONE
set '${arg:1}' false
;
; If we don't have arg:2, we're done...
if '${arg:2}' == '') goto RETURNVALUES.DONE
;
; Get the first image block, if there is one...
set '${arg:2}' '${rj:results.session.imageBlocks[0]}'
;
; bye-bye...
:RETURNVALUES.DONE
return 'pass'
