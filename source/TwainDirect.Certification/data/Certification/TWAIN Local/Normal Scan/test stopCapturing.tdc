;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test stopCapturing v1.0 24-Jun-2017
; arg:1 - state to check for
; returns: pass or fail
;
; Exercise the stopCapturing command.  We're going to do the following:
;
; - confirm that stopCapturing succeeds, and contains all required properties
;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Display the banner...
;
echo
echo 'Test stopCapturing v1.0 24-Jun-2017'
set stopcapturingresult 'pass'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Call stopCapturing, and check the return properties...
;
call STOPCAPTURING '${arg:1}'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Bye-bye...
;
echopassfail 'SUMMARY' '${get:stopcapturingresult}'
return '${get:stopcapturingresult}'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; STOPCAPTURING
; arg:1 - state to check for
; returns pass or fail
;
:STOPCAPTURING
;
; Send the command...
stopCapturing
;
; Check the mandatory properties...
call CHECK 'kind'
call CHECK 'commandId'
call CHECK 'method' '==' 'stopCapturing'
call CHECK 'results'
call CHECK 'results.success' '==' 'true'
call CHECK 'results.session'
call CHECK 'results.session.sessionId' '!=' ''
call CHECK 'results.session.revision' '!=' ''
call CHECK 'results.session.state' '==' '${arg:1}'
if '${get:stopcapturingresult}' != 'pass' goto STOPCAPTURING.FAIL
;
; We're good...
echopassfail 'stopCapturing call' 'pass'
return 'pass'
;
; No joy...
:STOPCAPTURING.FAIL
set stopcapturingresult 'fail'
echopassfail 'stopCapturing call' 'fail'
return 'fail'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; CHECK
; arg1 - property
; arg2 - if-statement operator (optional)
; arg3 - value to check for if arg2 is specified
; returns pass or fail
;
:CHECK
;
; Make sure the property exists...
if '${rjx:${arg:1}}' == '(null)' goto CHECK.MISSING
;
; If we have no operator, we're done...
if '${arg:2}' == '' goto CHECK.PASS
;
; Do the if-statement...
if '${rj:${arg:1}}' '${arg:2}' '${arg:3}' goto CHECK.PASS
;
; The if-statement failed...
echopassfail 'check ${arg:1}' 'fail (if '<${rj:${arg:1}}>' '${arg:2}' '<${arg:3}>')'
set stopcapturingresult 'fail'
return 'fail'
;
; The property is missing...
:CHECK.MISSING
echopassfail 'check ${arg:1}' 'fail (${arg:1} missing)'
set stopcapturingresult 'fail'
return 'fail'
;
; We're good...
:CHECK.PASS
echopassfail 'check ${arg:1}' 'pass'
return 'pass'
