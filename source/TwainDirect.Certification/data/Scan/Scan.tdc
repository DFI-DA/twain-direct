;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; TWAIN Direct Scan v1.0 22-Jun-2017
; arg:1 - scanner to use
; arg:2 - task (optional)
; returns: pass or fail
;
; Scan using TWAIN Direct, exercise and test as must of the system as possible...
;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Pick a scanner, default to the first scanner if we
; don't get one...
;
select '${arg:1}'
if '${ret:}' != 'true' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Confirm that all commands correctly return 404 invalid_x_privet_token if called before info or infoex...
;
run 'test x-privet-token error'
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Check that info and infoex are supported, and their values match the mDNS TXT fields...
;
run 'test info and infoex' true
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test createSession...
;
run 'test createsession'
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test getSession...
;
run 'test getsession'
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test sendTask...
;
run 'test sendtask'
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test startCapturing...
;
run 'test startcapturing'
if '${ret:}' != 'pass' goto MAIN.FAIL
goto DONE



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Scan until the scanner stops giving us images...
;
:MAIN.WAIT
	echo

; Loop here until we see an image, or scanning ends...
:MAIN.WAITNEXT

	; Get the session object...
	echo 'getSession'
	getSession
	set firstimageblock '${rj:results.session.imageBlocks[0]}'
	if '${rj:results.success}' != 'true' goto MAIN.FAIL
	if '${rj:results.session.imageBlocksDrained}' == 'true' goto MAIN.DONE
	if '${rj:results.session.state}' != 'capturing' goto MAIN.DONE
	if '${get:firstimageblock}' != '' goto MAIN.GETIMAGE
	sleep 1000

goto MAIN.WAITNEXT

; Keep getting images as long as we have some...
:MAIN.GETIMAGE

	; Get the metadata for the first image block, no thumbnail...
	echo
	echo 'CMD: readImageBlockMetadata' '${get:firstimageblock}'
	readImageBlockMetadata '${get:firstimageblock}' 'false'
	if '${rj:results.success}' != 'true' goto MAIN.FAIL
	if '${rj:results.session.state}' != 'capturing' goto MAIN.DONE

	; release the first image block...
	echo 'CMD: releaseImageBlocks' '${get:firstimageblock}'
	releaseImageBlocks '${get:firstimageblock}' '${get:firstimageblock}'
	set firstimageblock '${rj:results.session.imageBlocks[0]}'
	if '${rj:results.success}' != 'true' goto MAIN.FAIL
	if '${rj:results.session.imageBlocksDrained}' == 'true' goto MAIN.DONE
	if '${rj:results.session.state}' != 'capturing' goto MAIN.DONE
	if '${get:firstimageblock}' == '' goto MAIN.WAIT

goto MAIN.GETIMAGE
:MAIN.DONE



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test stopCapturing...
;
run 'test stopcapturing'
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test closeSession...
;
run 'test closeSession'
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Bye-bye...
;
:DONE
echo
echopassfail 'FINAL SUMMARY' 'pass'
return pass



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; MAIN.FAIL
;
:MAIN.FAIL
stopCapturing
closeSession
echo
echopassfail 'FINAL SUMMARY' 'fail'
return 'fail'
