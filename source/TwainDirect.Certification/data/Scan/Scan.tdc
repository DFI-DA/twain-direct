;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; TWAIN Direct Scan v1.0 22-Jun-2017
; arg:1 - scanner to use
; arg:2 - task (optional)
; arg:3 - get thumbnail with readImageBlockMetadata (default false)
; arg:4 - get metadata with readImageBlock (default false)
; returns: pass or fail
;
; Scan using TWAIN Direct, exercise and test as must of the system as possible...
;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Work out values for getThumbnail and getMetadata...
;
; Work out a value for getThumbnail...
set getThumbnail '${arg:3}'
if '${get:getThumbnail}' != '' goto MAIN.SKIPTHUMBNAILDEFAULT
set getThumbnail 'false'
:MAIN.SKIPTHUMBNAILDEFAULT
;
; Work out a value for getMetadata...
set getMetadata '${arg:4}'
if '${get:getMetadata}' != '' goto MAIN.SKIPMETADATADEFAULT
set getMetadata 'false'
:MAIN.SKIPMETADATADEFAULT



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Clean our images folder...
;
clean



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Pick a scanner, default to the first scanner if we don't get one...
;
select '${arg:1}'
if '${ret:}' != 'true' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Confirm that all commands correctly return 404 invalid_x_privet_token if called before info or infoex...
;
run 'test x-privet-token error'
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Check that info and infoex are supported, and their values match the mDNS TXT fields...
;
run 'test info and infoex' true
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test createSession...
;
run 'test createsession'
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test getSession...
;
run 'test getsession' 'ready'
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test sendTask...
;
run 'test sendtask' '${arg:2}'
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test startCapturing...
;
run 'test startcapturing'
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Scan until the scanner stops giving us images...
;
:MAIN.WAIT
	echo

; Loop here until we see an image, or scanning ends...
:MAIN.WAITNEXT

	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	; Test getSession...
	;
	run 'test getsession' 'capturing' 'outDone' 'outNextimageblock'
	if '${ret:}' != 'pass' goto MAIN.FAIL
	if '${get:outDone}' == 'true' goto MAIN.DONE
	if '${get:outNextimageblock}' != '' goto MAIN.GETIMAGE
	sleep 1000

goto MAIN.WAITNEXT

; Keep getting images as long as we have some, go back to
; waiting if we're fast enough to drain the scanner's buffers...
:MAIN.GETIMAGE

	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	; Test readImageBlockMetadata, unless we're told to skip it...
	;
	if '${get:getMetadata}' == 'true' goto MAIN.SKIPREADBLOCKMETADATA
	run 'test readImageBlockMetadata' '${get:outNextimageblock}' '${get:getThumbnail}'
	if '${ret:}' != 'pass' goto MAIN.FAIL
	:MAIN.SKIPREADBLOCKMETADATA

	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	; Test readImageBlock...
	;
	run 'test readImageBlock' '${get:outNextimageblock}' '${get:getMetadata}'
	if '${ret:}' != 'pass' goto MAIN.FAIL

	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	; Test releaseImageBlocks...
	;
	run 'test releaseImageBlocks' '${get:outNextimageblock}' '${get:outNextimageblock}' 'outDone' 'outNextimageblock'
	if '${ret:}' != 'pass' goto MAIN.FAIL
	if '${get:outDone}' == 'true' goto MAIN.DONE
	if '${get:outNextimageblock}' == '' goto MAIN.WAIT

goto MAIN.GETIMAGE
:MAIN.DONE



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test stopCapturing...
;
run 'test stopcapturing' 'ready'
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Test closeSession...
;
run 'test closeSession' 'noSession'
if '${ret:}' != 'pass' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Bye-bye...
;
:DONE
echo
echopassfail 'FINAL SUMMARY' 'pass'
return pass



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; MAIN.FAIL
;
:MAIN.FAIL
stopCapturing
closeSession
echo
echopassfail 'FINAL SUMMARY' 'fail'
return 'fail'
